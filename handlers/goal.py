from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    CommandHandler, ConversationHandler, MessageHandler,
    filters, ContextTypes
)

GOAL, CUSTOM_GOAL, AMOUNT, RATE = range(4)

async def goal_step(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    buttons = [["üöó –ú–∞—à–∏–Ω–∞", "üè† –ö–≤–∞—Ä—Ç–∏—Ä–∞"], ["üíº –ë–∏–∑–Ω–µ—Å", "üå¥ –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ"], ["üì± –ê–π—Ñ–æ–Ω", "üéØ –°–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç"]]
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏ —Ü–µ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏ —Å–≤–æ—é:",
        reply_markup=ReplyKeyboardMarkup(buttons, one_time_keyboard=True))
    return GOAL

async def custom_goal_step(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    ctx.user_data['goal'] = update.message.text
    await update.message.reply_text("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –°–∫–æ–ª—å–∫–æ ‚ÇΩ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è?", reply_markup=ReplyKeyboardRemove())
    return AMOUNT

async def amount_step(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    ctx.user_data["goal"] = update.message.text
    if update.message.text == "üéØ –°–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç":
        await update.message.reply_text("–ù–∞–ø–∏—à–∏ —Å–≤–æ—é —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ü–µ–ª—å:", reply_markup=ReplyKeyboardRemove())
        return CUSTOM_GOAL
    await update.message.reply_text(f"–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫–∞—è —Å—É–º–º–∞ –Ω—É–∂–Ω–∞ –¥–ª—è —Ü–µ–ª–∏ ¬´{ctx.user_data['goal']}¬ª?", reply_markup=ReplyKeyboardRemove())
    return AMOUNT

async def rate_step(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    amount_text = update.message.text.replace(" ", "")
    if amount_text.isdigit():
        ctx.user_data["amount"] = int(amount_text)
        await update.message.reply_text("–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—É—é —Å—Ç–∞–≤–∫—É –≤–∫–ª–∞–¥–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—à—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10.5):")
        return RATE
    else:
        await update.message.reply_text("–≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —á–∏—Å–ª–æ, –¥–∞–≤–∞–π –µ—â—ë —Ä–∞–∑:")
        return AMOUNT

async def final_step(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    try:
        rate = float(update.message.text.replace(",", "."))
        goal = ctx.user_data["goal"]
        amount = ctx.user_data["amount"]

        months_low = round(amount / 10000)
        months_medium = round(amount / 20000)
        months_high = round(amount / 50000)

        text = (
            f"üéØ –¶–µ–ª—å: {goal}\n"
            f"üí∞ –°—É–º–º–∞: {amount:,} ‚ÇΩ\n"
            f"üìà –°—Ç–∞–≤–∫–∞ –≤–∫–ª–∞–¥–∞: {rate}%\n\n"
            "üîπ –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏:\n"
            f"üê¢ –ú–µ–¥–ª–µ–Ω–Ω–æ (–Ω–∏–∑–∫–∏–π —Ä–∏—Å–∫): ~{months_low} –º–µ—Å—è—Ü–µ–≤\n"
            f"üö∂ –°—Ä–µ–¥–Ω–∏–π —Ç–µ–º–ø (—É–º–µ—Ä–µ–Ω–Ω—ã–π —Ä–∏—Å–∫): ~{months_medium} –º–µ—Å—è—Ü–µ–≤\n"
            f"üöÄ –ë—ã—Å—Ç—Ä–æ (–≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫): ~{months_high} –º–µ—Å—è—Ü–µ–≤\n\n"
            "‚ö†Ô∏è –≠—Ç–æ –Ω–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è, –∞ –¥—Ä—É–∂–µ—Å–∫–∏–π —Ä–∞—Å—á—ë—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∑–∞–∫–æ–Ω–∞–º–∏ –†–§."
        )

        await update.message.reply_text(text)
        return ConversationHandler.END
    except ValueError:
        await update.message.reply_text("–≠—Ç–æ –Ω–µ –ø—Ä–æ—Ü–µ–Ω—Ç! –ù–∞–ø–∏—à–∏ —Å—Ç–∞–≤–∫—É —Ü–∏—Ñ—Ä–∞–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, 8.5:")
        return RATE

goal_handler = ConversationHandler(
    entry_points=[CommandHandler("goal", goal_step)],
    states={
        GOAL: [MessageHandler(filters.TEXT & (~filters.COMMAND), amount_step)],
        CUSTOM_GOAL: [MessageHandler(filters.TEXT & (~filters.COMMAND), custom_goal_step)],
        AMOUNT: [MessageHandler(filters.TEXT & (~filters.COMMAND), rate_step)],
        RATE: [MessageHandler(filters.TEXT & (~filters.COMMAND), final_step)],
    },
    fallbacks=[CommandHandler("cancel", lambda u,c: ConversationHandler.END)],
)
